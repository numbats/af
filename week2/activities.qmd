---
title: "Activities: Week 2"
editor: source
engine: knitr
filters:
  - live
  - quiz-teachr
ojs-engine: true
webr:
  packages:
    - qlcheckr
    - fpp3
    - urca
    - forcats
  autoload-packages: false
  repos:
    - https://repo.r-wasm.org/
    - https://learnr-academy.github.io/qlcheckr
---

{{< include /_extensions/r-wasm/live/_knitr.qmd >}}

## More R functions

* `gg_season()` with `period` argument
* `pivot_longer()`
* `facet_grid()`
* `GGally::ggpairs()`
* `gg_lag()`
* `ACF()`

[R examples](workshop.R)

```{r}
#| echo: false
library(fpp3)
source(here::here("setup.R"))
```

## Exercise 1: cyclic data

A famous data set containing cycles is the Canadian lynx data, contained in `pelts`.

```{webr}
#| exercise: lynx
pelt |>
  autoplot(____)
```

How far apart are the peaks and troughs on average?

Produce a lag plot for the `Lynx` series.

```{webr}
#| exercise: lag_lynx
pelt |>
  gg_lag(___, lags = ____, geom = "point")
```

Which lags have the strongest correlation? Why?

Produce an ACF plot for the `Lynx` series.

```{webr}
#| exercise: acf_lynx
pelt |>
  ACF(___) |>
  autoplot(____)
```

* Why does the ACF peak around lag 10?
* Why can't this data be seasonal?

## Exercise 2: seasonal and cyclic data

Sometime trend, seasonality and cyclicity can occur together, such as in the Bricks production data.

```{webr}
#| exercise: bricks
aus_production |> autoplot(____)
aus_production |> ACF(___) |> autoplot()
```

* Can you see the seasonality in the time plot? How about the ACF plot?
* Can you see the cyclicity in the time plot? How about the ACF plot?

## Exercise 3: ACF plots

Which time plot corresponds to which ACF plot?

```{r}
#| label: acf-quiz
#| fig.asp: 0.5
#| fig.width: 12
#| echo: false
#| warning: false
#| out.width: 100%
#| cache: false
library(patchwork)
cowtemp <- as_tsibble(fma::cowtemp)
USAccDeaths <- as_tsibble(USAccDeaths)
AirPassengers <- as_tsibble(AirPassengers)
mink <- as_tsibble(fma::mink)
tp1 <- autoplot(cowtemp, value) +
  labs(x = "", y = "chirps per minute", title = "1. Daily temperature of cow")
tp2 <- autoplot(USAccDeaths, value) +
  labs(x = "", y = "thousands", title = "2. Monthly accidental deaths")
tp3 <- autoplot(AirPassengers, value) +
  labs(x = "", y = "thousands", title = "3. Monthly air passengers")
tp4 <- autoplot(mink, value) +
  labs(x = "", y = "thousands", title = "4. Annual mink trappings")
acfb <- ACF(cowtemp, value) |> autoplot() +
  labs(x = "", title = "B") + ylim(-0.4, 1)
acfa <- ACF(USAccDeaths, value) |> autoplot() +
  labs(x = "", title = "A") + ylim(-0.4, 1)
acfd <- ACF(AirPassengers, value) |> autoplot() +
  labs(x = "", title = "D") + ylim(-0.4, 1)
acfc <- ACF(mink, value) |> autoplot() +
  labs(x = "", title = "C") + ylim(-0.4, 1)
(tp1 | tp2 | tp3 | tp4) / (acfa | acfb | acfc | acfd)
```


::: columns

::: {.column width="25%"}

#### Plot 1.
:::{.quiz-singlechoice}
- [ ] [A]{hint="x"}
- [X] [B]{hint="o"}
- [ ] [C]{hint="x"}
- [ ] [D]{hint="x"}
:::
:::

::: {.column width="25%"}

#### Plot 2.
:::{.quiz-multichoice}
- [X] [A]{hint="o"}
- [ ] [B]{hint="x"}
- [ ] [C]{hint="x"}
- [ ] [D]{hint="x"}
:::
:::

::: {.column width="25%"}

#### Plot 3.
:::{.quiz-multichoice}
- [ ] [A]{hint="x"}
- [ ] [B]{hint="x"}
- [ ] [C]{hint="x"}
- [X] [D]{hint="o"}
:::
:::

::: {.column width="25%"}

#### Plot 4.
:::{.quiz-multichoice}
- [ ] [A]{hint="x"}
- [ ] [B]{hint="x"}
- [X] [C]{hint="o"}
- [ ] [D]{hint="x"}
:::
:::

:::

## Exercise 4: white noise

White noise data consists of purely random draws from the same distribution with mean zero and constant variance.
$$y_t = \varepsilon_t, \qquad \text{where $\varepsilon_t \mathop{\sim}\limits^{\mathrm{iid}} N(0, \sigma^2)$}$$

White noise data can be simulated using the `rnorm()` function. By setting the seed at the start of the code, we ensure the same random numbers are generated each time it is run. Change the seed to get different random numbers.

```{webr}
#| exercise: white-noise
set.seed(1)
my_data <- tsibble(t = seq(100), y = rnorm(100), index = t)
my_data |> autoplot(y)
my_data |> ACF(y) |> autoplot()
```

Can you find a seed value that gives data which appear NOT to be white noise?

## Exercise 5: random walks

Random walks are a type of time series where the value at time $t$ is equal to the previous value plus a random amount from a white noise process.
$$y_t = y_{t-1} + \varepsilon_t, \qquad \text{where $\varepsilon_t \mathop{\sim}\limits^{\mathrm{iid}} N(0, \sigma^2)$}$$
Equivalently, we can take the cumulative sum of a white noise process.
$$y_t = y_{0} + \sum_{t=1}^{T} \varepsilon_t, \qquad \text{where $\varepsilon_t \mathop{\sim}\limits^{\mathrm{iid}} N(0, \sigma^2)$}$$

```{webr}
#| exercise: random-walk
set.seed(1)
my_data <- tsibble(t = seq(100), y = cumsum(rnorm(100)), index = t)
my_data |> autoplot(y)
my_data |> ACF(y) |> autoplot()
```

Experiment by re-running the code with different seed values. Try to find a random walk which appears to have a strong positive trend, and another with a strong negative trend. Remember, it can't really have a trend because it is simply being generated from summing random numbers which have zero mean.


## Weekly quiz

[Go to week 2 quiz](https://learning.monash.edu/mod/quiz/view.php?id=3868353)
