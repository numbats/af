{
  "hash": "ae3bed9925b07d22c1f4556d6dd40a94",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: ETC3550/ETC5550 Applied forecasting\nauthor: \"Week 4: Simple forecasting methods\"\nformat:\n  presentation-beamer:\n    knitr:\n      opts_chunk:\n        dev: \"cairo_pdf\"\n    pdf-engine: pdflatex\n    fig-width: 7.5\n    fig-height: 3.5\n    include-in-header: ../header.tex\n    keep_tex: true\n    toc: true\n---\n\n\n\n# Four benchmark methods\n\n## Mean method\n\n`MEAN(y)` \n\n  * Forecast of all future values is equal to mean of historical data $\\{y_1,\\dots,y_T\\}$.\n  * Forecasts: $\\hat{y}_{T+h|T} = \\bar{y} = (y_1+\\dots+y_T)/T$\n  * Implicit model: $y_t = c + \\varepsilon_t$ where $\\varepsilon_t \\sim WN$.\n\n## Mean method\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-html/mean-method-explained-1.png){width=672}\n:::\n:::\n\n\\vspace*{10cm}\n\n## Naïve method\n\n`NAIVE(y)`\n\n  * Forecasts equal to last observed value.\n  * Forecasts: $\\hat{y}_{T+h|T} =y_T$.\n  * Implicit model is a random walk: $y_t = y_{t-1} + \\varepsilon_t$\n  * Consequence of efficient market hypothesis.\n\n## Naïve method\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-html/naive-method-explained-1.png){width=672}\n:::\n:::\n\n\\vspace*{10cm}\n\n## Seasonal Naïve method\n\n`SNAIVE(y ~ lag(m))`\n\n  * Forecasts equal to last value from same season.\n  * Forecasts: $\\hat{y}_{T+h|T} =y_{T+h-m(k+1)}$, where $m=$ seasonal period and $k$ is the integer part of $(h-1)/m$.\n  * Implicit model: $y_t = y_{t-m} + \\varepsilon_t$\n\n## Seasonal Naïve method\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-html/snaive-method-explained-1.png){width=672}\n:::\n:::\n\n## Drift method\n\n`RW(y ~ drift())`\n\n * Forecasts equal to last value plus average change:\n\n  \\vspace*{-1cm}\n  \\begin{align*}\n    \\hat{y}_{T+h|T} & =  y_{T} + \\frac{h}{T-1}\\sum_{t=2}^T (y_t-y_{t-1})\\\\\n                    & = y_T + \\frac{h}{T-1}(y_T -y_1).\n  \\end{align*}\n \n  \\vspace*{-0.6cm}\n\n   * Equivalent to extrapolating a line drawn between first and last observations.\n   * Implicit model: Random walk with drift: $y_t = c + y_{t-1} + \\varepsilon_t$\n\n## Drift method\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-html/drift-method-explained-1.png){width=672}\n:::\n:::\n\n\\vspace*{10cm}\n\n\n# Time trends and dummy seasonality\n\n## Linear time trends\n\n\\begin{block}{}\n\\centerline{$y_t = \\beta_0 + \\beta_1 x_{1,t} + \\varepsilon_t$}\n\\end{block}\n\n`TSLM(y ~ trend())`\n\n  * $x_{1,t} = t$, \\qquad $t = 1,\\dots,T$\n\n  * Forecasts: $\\hat{y}_{T+h|T} = \\beta_0 + \\beta_1(T+h)$\n\n## Piecewise linear time trends\n\n\\begin{block}{}\n\\centerline{$y_t = \\beta_0 + \\beta_1 x_{1,t} + \\dots + \\beta_k x_{k,t} + \\varepsilon_t$}\n\\end{block}\n\n`TSLM(y ~ trend(knots = c(tau1, tau2, ..., taup)))`\n\n  * Bends at $\\tau_1,\\dots,\\tau_p$\n\n  * $x_{1,t} = t$\n\n  * $x_{i,t} = (t-\\tau_i)_+ = \\left\\{ \n    \\begin{array}{ll}\n      0 & t <\\tau_i\\\\\n      (t-\\tau_i) & t \\ge \\tau_i\n    \\end{array}\\right.$\n\n  * Forecasts: $\\beta_0 + \\beta_1 (T+h) + \\beta_{2}(T+h-\\tau_1)_+ + \\dots + \\beta_{p+1} (T+h-\\tau_p)_+$\n\n## Quadratic time trends\n\n\\begin{block}{}\n\\centerline{$y_t = \\beta_0 + \\beta_1 x_{1,t} + \\beta_2 x_{2,t} + \\varepsilon_t$}\n\\end{block}\n\n  * $x_{1,t} = t$\n\n  * $x_{2,t} = t^2$\n\n  * Forecasts: $\\beta_0 + \\beta_1 (T+h) + \\beta_2 (T+h)^2$\n\n**NOT RECOMMENDED!**\n\n## Daily dummy variables\n\n\\begin{textblock}{7}(8,1.4)\n\\begin{block}{}\\small\\centering\n\\begin{tabular}{lrrrr}\n\\toprule\nDay & d1 & d2 & d3 & d4 \\\\\n\\midrule\nMonday     & 1  & 0  & 0  & 0 \\\\\nTuesday    & 0  & 1  & 0  & 0 \\\\\nWednesday  & 0  & 0  & 1  & 0 \\\\\nThursday   & 0  & 0  & 0  & 1 \\\\\nFriday     & 0  & 0  & 0  & 0 \\\\\nMonday     & 1  & 0  & 0  & 0 \\\\\nTuesday    & 0  & 1  & 0  & 0 \\\\\nWednesday  & 0  & 0  & 1  & 0 \\\\\nThursday   & 0  & 0  & 0  & 1 \\\\\nFriday     & 0  & 0  & 0  & 0 \\\\\n\\bottomrule\n\\end{tabular}\n\\end{block}\n\\end{textblock}\n\n\\begin{textblock}{6}(0.4,1.5)\n\\texttt{TSLM(y\\ \\textasciitilde{}\\ season())} \n\\fontsize{13}{15}\\sf\n\\begin{itemize}\\tightlist\n\\item Using one dummy for each category gives too many dummy variables!\n\\item The coefficients of the dummies are relative to the omitted category\n\\item \\texttt{season()} automatically generates the dummy variables for you.\n\\end{itemize}\n\\end{textblock}\n\n# Forecasting with transformations\n\n## Forecasting with transformations\n\n  * Back-transformed point forecasts are medians.\n  * To get the mean, we need a bias adjustment.\n\n\\pause\n\nLet $X$ have mean $\\mu$ and variance $\\sigma^2$.\n\nLet $f(x)$ be back-transformation function, and $Y=f(X)$.\n\nTaylor series expansion about $\\mu$:\n$$Y = f(X) \\approx f(\\mu) + (X-\\mu)f'(\\mu) + \\frac{1}{2}(X-\\mu)^2f''(\\mu).$$\\pause\\vspace*{-0.4cm}\n\n\\begin{alertblock}{}\n\\centerline{$\\E[Y] = \\E[f(X)] \\approx f(\\mu) + \\frac12 \\sigma^2 f''(\\mu)$}\n\\end{alertblock}\n\n## Bias adjustment\n\\fontsize{13}{14}\\sf\\vspace*{-0.2cm}\n\n**Box-Cox back-transformation:**\n\\begin{align*}\ny_t &= \\left\\{\\begin{array}{ll}\n        \\exp(w_t)      & \\quad \\lambda = 0; \\\\\n        (\\lambda W_t+1)^{1/\\lambda}  & \\quad \\lambda \\ne 0.\n\\end{array}\\right. \\\\\nf(x) &= \\begin{cases}\n                        e^x & \\quad\\lambda=0;\\\\\n (\\lambda x + 1)^{1/\\lambda} & \\quad\\lambda\\ne0.\n \\end{cases}\\\\\nf''(x) &= \\begin{cases}\n                        e^x & \\quad\\lambda=0;\\\\\n (1-\\lambda)(\\lambda x + 1)^{1/\\lambda-2} & \\quad\\lambda\\ne0.\n \\end{cases}\n\\end{align*}\\pause\\vspace*{-0.3cm}\n\\begin{alertblock}{}\n\\centerline{$\\E[Y] \\approx \\begin{cases}\n                        e^\\mu\\left[1+\\frac{\\sigma^2}{2}\\right] & \\quad\\lambda=0;\\\\\n (\\lambda \\mu + 1)^{1/\\lambda}\\left[1+\\frac{\\sigma^2(1-\\lambda)}{2(\\lambda\\mu+1)^2}\\right] & \\quad\\lambda\\ne0.\n \\end{cases}$}\n\\end{alertblock}\n\n# Forecasting with decompositions\n\n## Forecasting with decompositions\n\n\\begin{block}{}\n$$y_t = \\hat{S}_t + \\hat{A}_t$$\n\\vspace*{-0.5cm}\\begin{itemize}\\tightlist\n  \\item $\\hat{A}_t$ is seasonally adjusted component\n  \\item $\\hat{S}_t$ is seasonal component.\n\\end{itemize}\n\\end{block}\n\n  *  Forecast $\\hat{S}_t$ using a Seasonal Naïve method.\n  *  Forecast $\\hat{A}_t$ using a non-seasonal time series method.\n  *  Combine forecasts of $\\hat{S}_t$ and $\\hat{A}_t$ to get forecasts of original data.\n\n## Decomposition models\n\n`decomposition_model()` creates a decomposition model\n\n * You must provide a method for forecasting the `season_adjust` series.\n * A seasonal naïve method is used by default for the `seasonal` components.\n * The variances from both the seasonally adjusted and seasonal forecasts are combined.\n",
    "supporting": [
      "slides_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}