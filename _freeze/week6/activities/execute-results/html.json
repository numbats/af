{
  "hash": "bf00a0e473f0998c6582d59607fe1681",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activities: Week 6\"\nexecute: \n  echo: true\n---\n\n## Chinese GDP per capita forecasts\n\nWe will forecast the Chinese GDP from the `global_economy` data set using an ETS model. The following code provides a starting point. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp3)\nchinese_gdp <- global_economy |> \n    filter(Country == \"China\") |>\n    mutate(GDP_pc = GDP/Population)\nchinese_gdp |> autoplot(GDP_pc)\nfit <- chinese_gdp |>\n    model(ets = ETS(GDP_pc ~ error(\"A\") + trend(\"A\", alpha = 0.3, beta = 0.3) ))\nreport(fit)\nfc <- fit |> forecast(h=10)\nfc |> autoplot(chinese_gdp)\n```\n:::\n\n\nExperiment with the various options in the `ETS()` function to see how much the forecasts change with the parameters $\\alpha$ and $\\beta$, with a damped trend, and with a Box-Cox transformation. Try to develop an intuition of what each is doing to the forecasts.\n\nWhat happens when:\n\n* $\\alpha=0$? \n* $\\alpha=1$? \n* $\\beta=0$? \n* $\\beta > \\alpha$?\n* The trend is set to `\"N\"` (None)\n* The trend is set to `\"Ad\"` (Additive damped)\n* The error is set to `\"M\"` (Multiplicative)\n* A strong transformation such as a logarithm (Box-Cox with $\\lambda=0$ is used)?\n* $\\alpha$ and $\\beta$ are omitted?\n* The `trend()` term is omitted?\n* Everything from `~` on is omitted?\n* What combination of options gives you the narrowest prediction intervals? Why?\n* What combination of options gives you the widest prediction intervals? Why?\n* What combination of options do you think gives you the best forecasts?\n\n## Prediction interval calculation\n\nFor the no trend model, with $\\alpha = 0.5$, find the 95% prediction intervals for the next five years. Use the `hilo()` function to calculate them from the `fc` object.\n\nShow that these are equal to $\\ell_T \\pm 1.96 \\hat\\sigma \\sqrt{1+ (h-1)/4}$ where $\\hat\\sigma^2$ is the estimated residual variance.\n\n* The `components()` function can give you the value of $\\ell_T$.\n* The `glance()` function can give you the value of $\\sigma^2$.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}