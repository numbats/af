{
  "hash": "3270f80b7fad426c5db7fe38ed1c13c1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: ETC3550/ETC5550 Applied forecasting\nauthor: \"Week 3: Time series decomposition\"\nformat:\n  presentation-beamer:\n    knitr:\n      opts_chunk:\n        dev: \"cairo_pdf\"\n    pdf-engine: pdflatex\n    fig-width: 7.5\n    fig-height: 3.5\n    include-in-header: ../header.tex\n    keep_tex: yes\n    toc: true\n---\n\n\n\n# White noise and random walks\n\n## White noise\n\nWhite noise data consists of purely random draws from the same distribution with mean zero and constant variance.\n\\begin{block}{}\n\\centerline{$y_t = \\varepsilon_t, \\qquad \\text{where $\\varepsilon_t \\mathop{\\sim}\\limits^{\\mathrm{iid}} N(0, \\sigma^2)$}$}\n\\end{block}\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data <- tsibble(t = seq(100), y = rnorm(100), index = t)\nmy_data |> autoplot(y)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/white-noise-1.pdf){fig-pos='H'}\n:::\n:::\n\n## White noise\n\nWhite noise data consists of purely random draws from the same distribution with mean zero and constant variance.\n\\begin{block}{}\n\\centerline{$y_t = \\varepsilon_t, \\qquad \\text{where $\\varepsilon_t \\mathop{\\sim}\\limits^{\\mathrm{iid}} N(0, \\sigma^2)$}$}\n\\end{block}\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data |> ACF(y) |> autoplot()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/white-noise2-1.pdf){fig-pos='H'}\n:::\n:::\n\n## Random walks\n\nRandom walks are a type of time series where the value at time $t$ is equal to the previous value plus a random amount from a white noise process.\n\\begin{block}{}\n\\centerline{$y_t = y_{t-1} + \\varepsilon_t, \\qquad \\text{where $\\varepsilon_t \\mathop{\\sim}\\limits^{\\mathrm{iid}} N(0, \\sigma^2)$}$}\n\\end{block}\nEquivalently, we can take the cumulative sum of a white noise process.\n$$y_T = y_{0} + \\sum_{t=1}^{T} \\varepsilon_t, \\qquad \\text{where $\\varepsilon_t \\mathop{\\sim}\\limits^{\\mathrm{iid}} N(0, \\sigma^2)$}$$\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data <- tsibble(t = seq(100), y = cumsum(rnorm(100)), index = t)\n```\n:::\n\n## Random walks\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data |> autoplot(y)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/random-walk2-1.pdf){fig-pos='H'}\n:::\n:::\n\n## Random walks\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data |> ACF(y) |> autoplot()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/random-walk3-1.pdf){fig-pos='H'}\n:::\n:::\n\n# Transformations\n\n# Time series decomposition\n\n# The ABS stuff-up\n\n## The ABS stuff-up\n\n\\fullheight{abs1}\n\n## The ABS stuff-up\n\n\\fullheight{abs2}\n\n## The ABS stuff-up\n\n\\fullheight{abs3}\n\n## The ABS stuff-up\n\n::: {.cell}\n\n:::\n\n\\fontsize{10}{10}\\sf\n\n::: {.cell}\n\n```{.r .cell-code}\nemployed\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 440 x 4 [1M]\n       Time Month  Year Employed\n      <mth> <ord> <dbl>    <dbl>\n 1 1978 Feb Feb    1978    5986.\n 2 1978 Mar Mar    1978    6041.\n 3 1978 Apr Apr    1978    6054.\n 4 1978 May May    1978    6038.\n 5 1978 Jun Jun    1978    6031.\n 6 1978 Jul Jul    1978    6036.\n 7 1978 Aug Aug    1978    6005.\n 8 1978 Sep Sep    1978    6024.\n 9 1978 Oct Oct    1978    6046.\n10 1978 Nov Nov    1978    6034.\n# i 430 more rows\n```\n\n\n:::\n:::\n\n## The ABS stuff-up\n\n::: {.cell}\n\n```{.r .cell-code}\nemployed |>\n  autoplot(Employed) +\n  labs(title = \"Total employed\", y = \"Thousands\")\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/abs3-1.pdf){fig-pos='H'}\n:::\n:::\n\n## The ABS stuff-up\n\n::: {.cell}\n\n```{.r .cell-code}\nemployed |>\n  filter(Year >= 2005) |>\n  autoplot(Employed) +\n  labs(title = \"Total employed\", y = \"Thousands\")\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/abs4-1.pdf){fig-pos='H'}\n:::\n:::\n\n## The ABS stuff-up\n\n::: {.cell}\n\n```{.r .cell-code}\nemployed |>\n  filter(Year >= 2005) |>\n  gg_season(Employed, labels = \"right\") +\n  labs(title = \"Total employed\", y = \"Thousands\")\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/abs5-1.pdf){fig-pos='H'}\n:::\n:::\n\n## The ABS stuff-up\n\n::: {.cell}\n\n```{.r .cell-code}\nemployed |>\n  mutate(diff = difference(Employed)) |>\n  filter(Month == \"Sep\") |>\n  ggplot(aes(y = diff, x = 1)) +\n  geom_boxplot() +\n  coord_flip() +\n  labs(title = \"Sep - Aug: total employed\", y = \"Thousands\") +\n  scale_x_continuous(breaks = NULL, labels = NULL)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/abs6-1.pdf){fig-pos='H'}\n:::\n:::\n\n## The ABS stuff-up\n\n::: {.cell}\n\n```{.r .cell-code}\ndcmp <- employed |>\n  filter(Year >= 2005) |>\n  model(stl = STL(Employed ~ season(window = 11), robust = TRUE))\ncomponents(dcmp) |> autoplot()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/abs7-1.pdf){fig-pos='H'}\n:::\n:::\n\n## The ABS stuff-up\n\n::: {.cell}\n\n```{.r .cell-code}\ncomponents(dcmp) |>\n  filter(year(Time) == 2013) |>\n  gg_season(season_year) +\n  labs(title = \"Seasonal component\") + guides(colour = \"none\")\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/abs8-1.pdf){fig-pos='H'}\n:::\n:::\n\n## The ABS stuff-up\n\n::: {.cell}\n\n```{.r .cell-code}\ncomponents(dcmp) |>\n  as_tsibble() |>\n  autoplot(season_adjust)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-beamer/abs9-1.pdf){fig-pos='H'}\n:::\n:::\n\n## The ABS stuff-up\n\n  *  August 2014 employment numbers higher than expected.\n  *  Supplementary survey usually conducted in August for employed people.\n  *  Most likely, some employed people were claiming to be unemployed in August to avoid supplementary questions.\n  *  Supplementary survey not run in 2014, so no motivation to lie about employment.\n  *  In previous years, seasonal adjustment fixed the problem.\n  *  The ABS has now adopted a new method to avoid the bias.\n",
    "supporting": [
      "slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}