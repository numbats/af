{
  "hash": "bd8f8a2a99ae82cfae9b592cfc09f452",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise Week 3: Solutions\"\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp3)\n```\n:::\n\n# fpp3 3.7, Ex 1\n\n> Consider the GDP information in `global_economy`. Plot the GDP per capita for each country over time. Which country has the highest GDP per capita? How has this changed over time?\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_economy |>\n  autoplot(GDP / Population, alpha = 0.3) +\n  guides(colour = \"none\") # turn off the legend else hard to see as there are many series\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gdp_per_capita-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\navg_gdp_pc <- global_economy |>\n  as_tibble() |>\n  group_by(Country) |>\n  summarise(\n    # Average GDP per capita for each country\n    gdp_pc = mean(GDP / Population, na.rm = TRUE),\n    # Most recent GDP per capita for each country\n    last = last((GDP / Population)[!is.na(GDP / Population)])\n  )\ntop_n(avg_gdp_pc, 5, gdp_pc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  Country         gdp_pc    last\n  <fct>            <dbl>   <dbl>\n1 Cayman Islands  55868.  64103.\n2 Channel Islands 50912.  73570.\n3 Liechtenstein   68092. 164993.\n4 Monaco          86474. 168011.\n5 San Marino      59263.  48888.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmax_gdp_pc <- global_economy |>\n  semi_join(\n    avg_gdp_pc |>\n      filter(gdp_pc == max(gdp_pc, na.rm = TRUE)),\n    by = \"Country\"\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"ggrepel\")\n# Using geom_label_repel() gives nicer label positions than geom_label()\n# If the ggrepel package is not available, you can use geom_label() instead\nlibrary(ggrepel)\nglobal_economy |>\n  ggplot(aes(x = Year, y = GDP / Population, group = Country)) +\n  geom_line(alpha = 0.3) +\n  geom_line(colour = \"red\", data = max_gdp_pc) +\n  geom_label_repel(\n    aes(label = Country, x = 2020, y = last),\n    data = top_n(avg_gdp_pc, 5, last),\n  )\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_economy |>\n  mutate(gdp_pc = GDP / Population) |>\n  as_tibble() |>\n  group_by(Year) |>\n  mutate(max_gdp_pc = max(gdp_pc, na.rm = TRUE)) |>\n  ungroup() |>\n  filter(\n    gdp_pc == max_gdp_pc,\n    Year >= 1970\n  ) |>\n  arrange(Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 11\n   Country    Code   Year     GDP Growth   CPI Imports Exports Population gdp_pc\n   <fct>      <fct> <dbl>   <dbl>  <dbl> <dbl>   <dbl>   <dbl>      <dbl>  <dbl>\n 1 Monaco     MCO    1970 2.93e 8 NA        NA      NA      NA      23484 12480.\n 2 Monaco     MCO    1971 3.28e 8  5.23     NA      NA      NA      23720 13813.\n 3 Monaco     MCO    1972 4.02e 8  4.65     NA      NA      NA      24051 16734.\n 4 Monaco     MCO    1973 5.24e 8  6.55     NA      NA      NA      24439 21423.\n 5 Monaco     MCO    1974 5.64e 8  4.47     NA      NA      NA      24835 22707.\n 6 Monaco     MCO    1975 7.12e 8 -0.973    NA      NA      NA      25197 28254.\n 7 United Ar… ARE    1976 1.92e10 16.5      NA      NA      NA     646943 29698.\n 8 United Ar… ARE    1977 2.49e10 21.4      NA      NA      NA     748117 33246.\n 9 Monaco     MCO    1978 1.00e 9  3.95     NA      NA      NA      26087 38354.\n10 Monaco     MCO    1979 1.21e 9  3.53     NA      NA      NA      26395 45838.\n# ℹ 38 more rows\n# ℹ 1 more variable: max_gdp_pc <dbl>\n```\n\n\n:::\n:::\n\n- Monaco currently has the highest GDP per capita, taking over from Liechtenstein.\n- These two countries have had the highest GDP per capita for most of the last 50 years.\n- The only years since 1970 where either Monaco or Liechtenstein did not have the highest GDP per capita were 1976 and 1977, when the United Arab Emirates just beat Monaco.\n\n# fpp3 3.7, Ex 2\n\n> For each of the following series, make a graph of the data. If transforming seems appropriate, do so and describe the effect.\n\n> * United States GDP from `global_economy`\n> * Slaughter of Victorian \"Bulls, bullocks and steers\" in `aus_livestock`\n> * Victorian Electricity Demand from `vic_elec`.\n> * Gas production from `aus_production`\n\n## United States GDP\n\n::: {.cell}\n\n```{.r .cell-code}\nus_economy <- global_economy |>\n  filter(Country == \"United States\")\nus_economy |>\n  autoplot(GDP)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n-   Trend appears exponential, a transformation would be useful.\n\n::: {.cell}\n\n```{.r .cell-code}\nus_economy |>\n  autoplot(box_cox(GDP, 0))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n-   A log transformation (Box-Cox with $\\lambda = 0$) appears slightly\n    too strong.\n\n::: {.cell}\n\n```{.r .cell-code}\nus_economy |>\n  autoplot(box_cox(GDP, 0.3))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n-   Using $\\lambda = 0.3$ looks pretty good, the trend is now almost\n    linear.\n\nLet's see what guerrero's method suggests.\n\n::: {.cell}\n\n```{.r .cell-code}\nus_economy |>\n  features(GDP, features = guerrero)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  Country       lambda_guerrero\n  <fct>                   <dbl>\n1 United States           0.282\n```\n\n\n:::\n:::\n\nPretty close to $\\lambda = 0.3$, let's see how it looks:\n\n::: {.cell}\n\n```{.r .cell-code}\nus_economy |>\n  autoplot(box_cox(GDP, 0.2819714))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n-   More or less the same. Box-Cox transformations are usually\n    insensitive to the choice of $\\lambda$.\n\n## Slaughter of Victorian \"Bulls, bullocks and steers\"\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_bulls <- aus_livestock |>\n  filter(State == \"Victoria\", Animal == \"Bulls, bullocks and steers\")\nvic_bulls |>\n  autoplot(Count)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n-   Variation in the series appears to vary slightly with the number of\n    bulls slaughtered in Victoria.\n-   A transformation may be useful.\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_bulls |>\n  autoplot(log(Count))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n-   A log transformation (Box-Cox $\\lambda = 0$) appears to normalise\n    most of the variation. Let's check with guerrero's method.\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_bulls |>\n  features(Count, features = guerrero)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  Animal                     State    lambda_guerrero\n  <fct>                      <fct>              <dbl>\n1 Bulls, bullocks and steers Victoria         -0.0446\n```\n\n\n:::\n:::\n\n-   Pretty close, guerrero suggests $\\lambda = -0.045$. This is close\n    enough to zero, so it is probably best to just use a log\n    transformation (allowing better interpretations).\n\n## Victorian Electricity Demand\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_elec |>\n  autoplot(Demand)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n-   Seasonal patterns for *time of day* hidden due to density of ink.\n\n-   *Day-of-week* seasonality just visible.\n\n-   *Time-of-year* seasonality is clear with increasing variance in\n    winter and high skewness in summer.\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_elec |>\n  autoplot(box_cox(Demand, 0))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n-   A log transformation makes the variance more even and reduces the\n    skewness.\n\n-   Guerrero's method doesn't work here as there are several types of\n    seasonality.\n\n## Australian Gas production\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |>\n  autoplot(Gas)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n-   Variation in seasonal pattern grows proportionally to the amount of\n    gas produced in Australia. A transformation should work well here.\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |>\n  autoplot(box_cox(Gas, 0))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n-   A log transformation appears slightly too strong, where the\n    variation in periods with smaller gas production is now larger than\n    the variation during greater gas production.\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |>\n  features(Gas, features = guerrero)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  lambda_guerrero\n            <dbl>\n1           0.110\n```\n\n\n:::\n:::\n\n-   Guerrero's method agrees by selecting a slightly weaker\n    transformation. Let's see how it looks.\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |>\n  autoplot(box_cox(Gas, 0.1095))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\nLooking good! The variation is now constant across the series.\n\n# fpp3 3.7, Ex 3\n\n> Why is a Box-Cox transformation unhelpful for the `canadian_gas` data?\n\n::: {.cell}\n\n```{.r .cell-code}\ncanadian_gas |>\n  autoplot(Volume) +\n  labs(\n    x = \"Year\", y = \"Gas production (billion cubic meters)\",\n    title = \"Monthly Canadian gas production\"\n  )\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n-   Here the variation in the series is not proportional to the amount\n    of gas production in Canada.\n\n-   When small and large amounts of gas is being produced, we can\n    observe small variation in the seasonal pattern.\n\n-   However, between 1975 and 1990 the gas production is moderate, and\n    the variation is large.\n\n-   Power transformations (like the Box-Cox transformation) require the\n    variability of the series to vary proportionately to the level of\n    the series.\n\n# fpp3 3.7, Ex 4\n\n> What Box-Cox transformation would you select for your retail data (from Exercise 8 in Section 2.10)?\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345678)\nmyseries <- aus_retail |>\n  filter(\n    `Series ID` == sample(aus_retail$`Series ID`, 1),\n    Month < yearmonth(\"2018 Jan\")\n  )\nmyseries |>\n  autoplot(Turnover) +\n  labs(\n    y = \"Turnover (million $AUD)\", x = \"Time (Years)\",\n    title = myseries$Industry[1],\n    subtitle = myseries$State[1]\n  )\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\nThe variation appears proportional to the level of the series, so a Box-Cox transformation may be useful.\n\n::: {.cell}\n\n```{.r .cell-code}\nmyseries |>\n  autoplot(box_cox(Turnover, 0)) +\n  labs(\n    title = myseries$Industry[1],\n    subtitle = myseries$State[1]\n  )\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\nA log transformation (Box-Cox $\\lambda = 0$) appears about right here.\n\nLet's check what the Guerrero method would suggest.\n\n::: {.cell}\n\n```{.r .cell-code}\nmyseries |>\n  features(Turnover, features = guerrero)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  State              Industry                                    lambda_guerrero\n  <chr>              <chr>                                                 <dbl>\n1 Northern Territory Clothing, footwear and personal accessory …          0.0776\n```\n\n\n:::\n:::\n\nThis is close to zero, so it supports our choice above.\n\nNote: your series may be different and require a different transformation than what I have used here.\n\n# fpp3 3.7, Ex 5\n\n> For the following series, find an appropriate Box-Cox transformation in order to stabilise the variance. Tobacco from `aus_production`, Economy class passengers between Melbourne and Sydney from `ansett`, and Pedestrian counts at Southern Cross Station from `pedestrian`.\n\n## Australian tobacco production\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |>\n  autoplot(Tobacco)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n-   This variation in this series appears to be mostly constant across\n    different levels of the series.\n-   If any transformation is required, it would be a weak one. This can\n    be seen if a strong transformation (such as log) is used.\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |>\n  autoplot(log(Tobacco))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n-   Guerrero's method suggests that $\\lambda = 0.926$ is appropriate.\n    This is a very weak transformation, as it is close to 1 (probably\n    best to not bother transforming this series).\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |>\n  features(Tobacco, features = guerrero)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  lambda_guerrero\n            <dbl>\n1           0.926\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |>\n  autoplot(box_cox(Tobacco, 0.926))\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n-   This series appears very similar to the original. The transformation\n    is having almost no effect.\n\n## Economy passengers between Melbourne and Sydney\n\n::: {.cell}\n\n```{.r .cell-code}\nansett |>\n  filter(Airports == \"MEL-SYD\", Class == \"Economy\") |>\n  autoplot(Passengers) +\n  labs(title = \"Economy passengers\", subtitle = \"MEL-SYD\")\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n-   The data does not appear to vary proportionally to the level of the\n    series.\n\n-   There are many periods in this time series (such as the strike and\n    change in seat classes) that may need further attention, but this is\n    probably better resolved with modelling rather than transformations.\n\n## Pedestrian counts\n\n::: {.cell}\n\n```{.r .cell-code}\npedestrian |>\n  filter(Sensor == \"Southern Cross Station\") |>\n  autoplot(Count) +\n  labs(title = \"Southern Cross Pedestrians\")\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n-   There is a high skewness and some zeros (so we can't take logs).\n    Let's try the `log(x+1)` transformation:\n\n::: {.cell}\n\n```{.r .cell-code}\npedestrian |>\n  filter(Sensor == \"Southern Cross Station\") |>\n  autoplot(log1p(Count)) +\n  labs(title = \"Southern Cross Pedestrians\")\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\nThat's roughly balanced the two tails.\n\n# fpp3 3.7, Ex 9\n\n> Figures 3.16 and 3.17 show the result of decomposing the number of persons in the civilian labour force in Australia each month from February 1978 to August 1995.\n\n>   a. Write about 3--5 sentences describing the results of the decomposition. Pay particular attention to the scales of the graphs in making your interpretation.\n\n* The Australian labour force has been decomposed into 3 components (trend, seasonality, and remainder) using an STL decomposition.\n* The trend element has been captured well by the decomposition, as it smoothly increases with a similar pattern to the data. The trend is of the same scale as the data (indicated by similarly sized grey bars), and contributes most to the decomposition (having the smallest scale bar).\n* The seasonal component changes slowly throughout the series, with the second seasonal peak diminishing as time goes on -- this component is the smallest contribution original data (having the largest scale bar).\n* The remainder is well-behaved until 1991/1992 when there is a sharp drop. There also appears to be a smaller drop in 1993/1994. There is sometimes some leakage of the trend into the remainder component when the trend window is too large. This appears to have happened here. It would be better if the recession of 1991-1992, and the smaller dip in 1993, were both included in the trend estimate rather than the remainder estimate. This would require a smaller trend window than what was used.\n* In the bottom graph, the seasonal component is shown using a sub-series plot. December is the highest employment month, followed by March and September. The seasonal component changes mostly in March (with a decrease in the most recent years). July and August are the months with the next largest changes. The least changing is June with the rest are somewhere between these. December and September show increases in the most recent years.\n\n>   b. Is the recession of 1991/1992 visible in the estimated components?\n\nYes. The remainder shows a substantial drop during 1991 and 1992 coinciding with the recession.\n\n# fpp3 3.7, Ex 10\n\n> This exercise uses the `canadian_gas` data (monthly Canadian gas production in billions of cubic metres, January 1960 -- February 2005).\n>\n>   a. Plot the data using `autoplot()`, `gg_subseries()` and `gg_season()` to look at the effect of the changing seasonality over time. What do you think is causing it to change so much?\n\n::: {.cell}\n\n```{.r .cell-code}\ncanadian_gas |> autoplot(Volume)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gas1-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncanadian_gas |> gg_subseries(Volume)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gas1-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncanadian_gas |> gg_season(Volume)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gas1-3.png){width=672}\n:::\n:::\n\n- The changes in seasonality are possibly due to changes in the regulation of gas prices.\n\n>   b. Do an STL decomposition of the data. You will need to choose a seasonal window to allow for the changing shape of the seasonal component.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- canadian_gas |>\n  model(STL(Volume)) |>\n  components()\n\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A dable: 542 x 7 [1M]\n# Key:     .model [1]\n# :        Volume = trend + season_year + remainder\n   .model         Month Volume trend season_year remainder season_adjust\n   <chr>          <mth>  <dbl> <dbl>       <dbl>     <dbl>         <dbl>\n 1 STL(Volume) 1960 Jan  1.43   1.08      0.520   -0.172           0.911\n 2 STL(Volume) 1960 Feb  1.31   1.11      0.215   -0.0178          1.09 \n 3 STL(Volume) 1960 Mar  1.40   1.13      0.307   -0.0395          1.09 \n 4 STL(Volume) 1960 Apr  1.17   1.16      0.0161  -0.00627         1.15 \n 5 STL(Volume) 1960 May  1.12   1.18     -0.116    0.0476          1.23 \n 6 STL(Volume) 1960 Jun  1.01   1.21     -0.356    0.159           1.37 \n 7 STL(Volume) 1960 Jul  0.966  1.23     -0.403    0.136           1.37 \n 8 STL(Volume) 1960 Aug  0.977  1.26     -0.349    0.0677          1.33 \n 9 STL(Volume) 1960 Sep  1.03   1.28     -0.340    0.0870          1.37 \n10 STL(Volume) 1960 Oct  1.25   1.31     -0.0899   0.0329          1.34 \n# ℹ 532 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \".model\"        \"Month\"         \"Volume\"        \"trend\"        \n[5] \"season_year\"   \"remainder\"     \"season_adjust\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfit |> autoplot()\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gas2-1.png){width=672}\n:::\n:::\n\n>   c. How does the seasonal shape change over time? [Hint: Try plotting the seasonal component using `gg_season()`.]\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |> gg_season(season_year)\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gas3-1.png){width=672}\n:::\n:::\n\n-   Here the changes are easier to see. Up to about 1990 there is strong\n    seasonality with the greatest volume in the Canadian winter.\n-   The seasonality increases in size over time. After 1990 the\n    seasonality changes shape and appears to be driven partly by the\n    month length near the end of the series.\n\n>   d. Can you produce a plausible seasonally adjusted series?\n\n::: {.cell}\n\n```{.r .cell-code}\ncanadian_gas |>\n  autoplot(Volume) +\n  autolayer(fit, season_adjust, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gas4-1.png){width=672}\n:::\n:::\n\n>   e. Compare the results with those obtained using SEATS and X11. How are they different?\n\n::: {.cell}\n\n```{.r .cell-code}\n# remember to load library(seasonal) before attempting this question!\ncanadian_gas |>\n  model(X_13ARIMA_SEATS(Volume ~ seats())) |>\n  components() |>\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gas5-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncanadian_gas |>\n  model(X_13ARIMA_SEATS(Volume ~ x11())) |>\n  components() |>\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](ex3-sol_files/figure-html/gas5-2.png){width=672}\n:::\n:::\n\n-   Note that SEATS fits a multiplicative decomposition by default, so\n    it is hard to directly compare the results with the other two\n    methods.\n\n-   The X11 seasonal component is quite similar to the STL seasonal\n    component. Both SEATS and X11 have estimated a more wiggly trend\n    line than STL.\n",
    "supporting": [
      "ex3-sol_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}