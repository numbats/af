{
  "hash": "6848ddd1f791ec1d6f8f97792b25803e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activities: Week 2\"\neditor: source\nengine: knitr\nfilters:\n  - live\n  - quiz-teachr\nojs-engine: true\nwebr:\n  packages:\n    - qlcheckr\n    - fpp3\n    - urca\n    - forcats\n  autoload-packages: false\n  repos:\n    - https://repo.r-wasm.org/\n    - https://learnr-academy.github.io/qlcheckr\n---\n\n\n::: {.cell}\n\n:::\n\n\n\n## More R functions\n\n* `gg_season()` with `period` argument\n* `pivot_longer()`\n* `facet_grid()`\n* `GGally::ggpairs()`\n* `gg_lag()`\n* `ACF()`\n\n[R examples](workshop.R)\n\n\n::: {.cell}\n\n:::\n\n\n## Exercise 1: cyclic data\n\nA famous data set containing cycles is the Canadian lynx data, contained in `pelts`.\n\n\n::: {.cell exercise='lynx'}\n```{webr}\n#| exercise: lynx\npelt |>\n  autoplot(____)\n```\n:::\n\n\nHow far apart are the peaks and troughs on average?\n\nProduce a lag plot for the `Lynx` series.\n\n\n::: {.cell exercise='lag_lynx'}\n```{webr}\n#| exercise: lag_lynx\npelt |>\n  gg_lag(___, lags = ____, geom = \"point\")\n```\n:::\n\n\nWhich lags have the strongest correlation? Why?\n\nProduce an ACF plot for the `Lynx` series.\n\n\n::: {.cell exercise='acf_lynx'}\n```{webr}\n#| exercise: acf_lynx\npelt |>\n  ACF(___) |>\n  autoplot(____)\n```\n:::\n\n\n* Why does the ACF peak around lag 10?\n* Why can't this data be seasonal?\n\n## Exercise 2: seasonal and cyclic data\n\nSometime trend, seasonality and cyclicity can occur together, such as in the Bricks production data.\n\n\n::: {.cell exercise='bricks'}\n```{webr}\n#| exercise: bricks\naus_production |> autoplot(____)\naus_production |> ACF(___) |> autoplot()\n```\n:::\n\n\n* Can you see the seasonality in the time plot? How about the ACF plot?\n* Can you see the cyclicity in the time plot? How about the ACF plot?\n\n## Exercise 3: ACF plots\n\nWhich time plot corresponds to which ACF plot?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](activities_files/figure-html/acf-quiz-1.png){width=100%}\n:::\n:::\n\n\n\n::: columns\n\n::: {.column width=\"25%\"}\n\n#### Plot 1.\n:::{.quiz-singlechoice}\n- [ ] [A]{hint=\"x\"}\n- [X] [B]{hint=\"o\"}\n- [ ] [C]{hint=\"x\"}\n- [ ] [D]{hint=\"x\"}\n:::\n:::\n\n::: {.column width=\"25%\"}\n\n#### Plot 2.\n:::{.quiz-multichoice}\n- [X] [A]{hint=\"o\"}\n- [ ] [B]{hint=\"x\"}\n- [ ] [C]{hint=\"x\"}\n- [ ] [D]{hint=\"x\"}\n:::\n:::\n\n::: {.column width=\"25%\"}\n\n#### Plot 3.\n:::{.quiz-multichoice}\n- [ ] [A]{hint=\"x\"}\n- [ ] [B]{hint=\"x\"}\n- [ ] [C]{hint=\"x\"}\n- [X] [D]{hint=\"o\"}\n:::\n:::\n\n::: {.column width=\"25%\"}\n\n#### Plot 4.\n:::{.quiz-multichoice}\n- [ ] [A]{hint=\"x\"}\n- [ ] [B]{hint=\"x\"}\n- [X] [C]{hint=\"o\"}\n- [ ] [D]{hint=\"x\"}\n:::\n:::\n\n:::\n\n## Exercise 4: white noise\n\nWhite noise data consists of purely random draws from the same distribution with mean zero and constant variance.\n$$y_t = \\varepsilon_t, \\qquad \\text{where $\\varepsilon_t \\mathop{\\sim}\\limits^{\\mathrm{iid}} N(0, \\sigma^2)$}$$\n\nWhite noise data can be simulated using the `rnorm()` function. By setting the seed at the start of the code, we ensure the same random numbers are generated each time it is run. Change the seed to get different random numbers.\n\n\n::: {.cell exercise='white-noise'}\n```{webr}\n#| exercise: white-noise\nset.seed(1)\nmy_data <- tsibble(t = seq(100), y = rnorm(100), index = t)\nmy_data |> autoplot(y)\nmy_data |> ACF(y) |> autoplot()\n```\n:::\n\n\nCan you find a seed value that gives data which appear NOT to be white noise?\n\n## Exercise 5: random walks\n\nRandom walks are a type of time series where the value at time $t$ is equal to the previous value plus a random amount from a white noise process.\n$$y_t = y_{t-1} + \\varepsilon_t, \\qquad \\text{where $\\varepsilon_t \\mathop{\\sim}\\limits^{\\mathrm{iid}} N(0, \\sigma^2)$}$$\nEquivalently, we can take the cumulative sum of a white noise process.\n$$y_t = y_{0} + \\sum_{t=1}^{T} \\varepsilon_t, \\qquad \\text{where $\\varepsilon_t \\mathop{\\sim}\\limits^{\\mathrm{iid}} N(0, \\sigma^2)$}$$\n\n\n::: {.cell exercise='random-walk'}\n```{webr}\n#| exercise: random-walk\nset.seed(1)\nmy_data <- tsibble(t = seq(100), y = cumsum(rnorm(100)), index = t)\nmy_data |> autoplot(y)\nmy_data |> ACF(y) |> autoplot()\n```\n:::\n\n\nExperiment by re-running the code with different seed values. Try to find a random walk which appears to have a strong positive trend, and another with a strong negative trend. Remember, it can't really have a trend because it is simply being generated from summing random numbers which have zero mean.\n\n\n## Weekly quiz\n\n[Go to week 2 quiz](https://learning.monash.edu/mod/quiz/view.php?id=3868353)\n",
    "supporting": [
      "activities_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}