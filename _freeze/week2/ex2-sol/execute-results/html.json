{
  "hash": "da3f40ca14d7d70ac44209d09cfe94f9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise Week 2: Solutions\"\nexecute:\n  echo: true\nformat:\n  html:\n    toc: true\n    toc_depth: 1\n    toc-floating: true\n    toc-location: left\n    toc-title: Exercise\n    number_sections: false\n---\n\n\n\n# fpp3 2.10, Ex 1\n\n> Explore the following four time series: `Bricks` from `aus_production`, `Lynx` from `pelt`, `Close` from `gafa_stock`, `Demand` from `vic_elec`.\n>\n>   + Use `?` (or `help()`) to find out about the data in each series.\n>   + What is the time interval of each series?\n>   + Use `autoplot()` to produce a time plot of each series.\n>   + For the last plot, modify the axis labels and title.\n\n## Bricks\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 218 x 7 [1Q]\n   Quarter  Beer Tobacco Bricks Cement Electricity   Gas\n     <qtr> <dbl>   <dbl>  <dbl>  <dbl>       <dbl> <dbl>\n 1 1956 Q1   284    5225    189    465        3923     5\n 2 1956 Q2   213    5178    204    532        4436     6\n 3 1956 Q3   227    5297    208    561        4806     7\n 4 1956 Q4   308    5681    197    570        4418     6\n 5 1957 Q1   262    5577    187    529        4339     5\n 6 1957 Q2   228    5651    214    604        4811     7\n 7 1957 Q3   236    5317    227    603        5259     7\n 8 1957 Q4   320    6152    222    582        4735     6\n 9 1958 Q1   272    5758    199    554        4608     5\n10 1958 Q2   233    5641    229    620        5196     7\n# ℹ 208 more rows\n```\n\n\n:::\n:::\n\nThe observations are quarterly.\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |> autoplot(Bricks)\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nAn upward trend is apparent until 1980, after which the number of clay bricks being produced starts to decline. A seasonal pattern is evident in this data. Some sharp drops in some quarters can also be seen.\n\n## Lynx\n\n::: {.cell}\n\n```{.r .cell-code}\ninterval(pelt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<interval[1]>\n[1] 1Y\n```\n\n\n:::\n:::\n\nObservations are made once per year.\n\n::: {.cell}\n\n```{.r .cell-code}\npelt |> autoplot(Lynx)\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nCanadian lynx trappings are cyclic, as the extent of peak trappings is unpredictable, and the spacing between the peaks is irregular but approximately 10 years.\n\n## Close\n\n::: {.cell}\n\n```{.r .cell-code}\ngafa_stock\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 5,032 x 8 [!]\n# Key:       Symbol [4]\n   Symbol Date        Open  High   Low Close Adj_Close    Volume\n   <chr>  <date>     <dbl> <dbl> <dbl> <dbl>     <dbl>     <dbl>\n 1 AAPL   2014-01-02  79.4  79.6  78.9  79.0      67.0  58671200\n 2 AAPL   2014-01-03  79.0  79.1  77.2  77.3      65.5  98116900\n 3 AAPL   2014-01-06  76.8  78.1  76.2  77.7      65.9 103152700\n 4 AAPL   2014-01-07  77.8  78.0  76.8  77.1      65.4  79302300\n 5 AAPL   2014-01-08  77.0  77.9  77.0  77.6      65.8  64632400\n 6 AAPL   2014-01-09  78.1  78.1  76.5  76.6      65.0  69787200\n 7 AAPL   2014-01-10  77.1  77.3  75.9  76.1      64.5  76244000\n 8 AAPL   2014-01-13  75.7  77.5  75.7  76.5      64.9  94623200\n 9 AAPL   2014-01-14  76.9  78.1  76.8  78.1      66.1  83140400\n10 AAPL   2014-01-15  79.1  80.0  78.8  79.6      67.5  97909700\n# ℹ 5,022 more rows\n```\n\n\n:::\n:::\n\nInterval is daily. Looking closer at the data, we can see that the index is a Date variable. It also appears that observations occur only on trading days, creating lots of implicit missing values.\n\n::: {.cell}\n\n```{.r .cell-code}\ngafa_stock |>\n  autoplot(Close)\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nStock prices for these technology stocks have risen for most of the series, until mid-late 2018.\n\nThe four stocks are on different scales, so they are not directly comparable. A plot with faceting would be better.\n\n::: {.cell}\n\n```{.r .cell-code}\ngafa_stock |>\n  ggplot(aes(x = Date, y = Close, group = Symbol)) +\n  geom_line(aes(col = Symbol)) +\n  facet_grid(Symbol ~ ., scales = 'free')\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\nThe downturn in the second half of 2018 is now very clear, with Facebook taking a big drop (about 20%) in the middle of the year.\n\nThe stocks tend to move roughly together, as you would expect with companies in the same industry.\n\n## Demand\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_elec\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 52,608 x 5 [30m] <Australia/Melbourne>\n   Time                Demand Temperature Date       Holiday\n   <dttm>               <dbl>       <dbl> <date>     <lgl>  \n 1 2012-01-01 00:00:00  4383.        21.4 2012-01-01 TRUE   \n 2 2012-01-01 00:30:00  4263.        21.0 2012-01-01 TRUE   \n 3 2012-01-01 01:00:00  4049.        20.7 2012-01-01 TRUE   \n 4 2012-01-01 01:30:00  3878.        20.6 2012-01-01 TRUE   \n 5 2012-01-01 02:00:00  4036.        20.4 2012-01-01 TRUE   \n 6 2012-01-01 02:30:00  3866.        20.2 2012-01-01 TRUE   \n 7 2012-01-01 03:00:00  3694.        20.1 2012-01-01 TRUE   \n 8 2012-01-01 03:30:00  3562.        19.6 2012-01-01 TRUE   \n 9 2012-01-01 04:00:00  3433.        19.1 2012-01-01 TRUE   \n10 2012-01-01 04:30:00  3359.        19.0 2012-01-01 TRUE   \n# ℹ 52,598 more rows\n```\n\n\n:::\n:::\n\nData is available at 30 minute intervals.\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_elec |>\n  autoplot(Demand)\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\nAppears to have an annual seasonal pattern, where demand is higher during summer and winter. Can't see much detail, so let's zoom in.\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_elec |>\n  filter(yearmonth(Time) == yearmonth(\"2012 June\")) |>\n  autoplot(Demand)\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\nAppears to have a daily pattern, where less electricity is used overnight. Also appears to have a working day effect (less demand on weekends and holidays).\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_elec |>\n  autoplot(Demand / 1e3) +\n  labs(\n    x = \"Date\",\n    y = \"Demand (GW)\",\n    title = \"Half-hourly electricity demand\",\n    subtitle = \"Victoria, Australia\"\n  )\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\nHere the annual seasonality is clear, with high volatility in summer, and peaks in summer and winter. The weekly seasonality is also visible, but the daily seasonality is hidden due to the compression on the horizontal axis.\n\n# fpp3 2.10, Ex 2\n\n> Use `filter()` to find what days corresponded to the peak closing price for each of the four stocks in `gafa_stock`.\n\n::: {.cell}\n\n```{.r .cell-code}\ngafa_stock |>\n  group_by(Symbol) |>\n  filter(Close == max(Close)) |>\n  ungroup() |>\n  select(Symbol, Date, Close)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 4 x 3 [!]\n# Key:       Symbol [4]\n  Symbol Date       Close\n  <chr>  <date>     <dbl>\n1 AAPL   2018-10-03  232.\n2 AMZN   2018-09-04 2040.\n3 FB     2018-07-25  218.\n4 GOOG   2018-07-26 1268.\n```\n\n\n:::\n:::\n\n# fpp3 2.10, Ex 3\n\n> Download the file `tute1.csv` from [the book website](http://OTexts.com/fpp3/extrafiles/tute1.csv), open it in Excel (or some other spreadsheet application), and review its contents. You should find four columns of information. Columns B through D each contain a quarterly series, labelled Sales, AdBudget and GDP. Sales contains the quarterly sales for a small company over the period 1981-2005. AdBudget is the advertising budget and GDP is the gross domestic product. All series have been adjusted for inflation.\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload.file(\n  \"http://OTexts.com/fpp3/extrafiles/tute1.csv\",\n  tute1 <- tempfile()\n)\ntute1 <- readr::read_csv(tute1)\nView(tute1)\nmytimeseries <- tute1 |>\n  mutate(Quarter = yearquarter(Quarter)) |>\n  as_tsibble(index = Quarter)\n\nmytimeseries |>\n  pivot_longer(-Quarter, names_to = \"Key\", values_to = \"Value\") |>\n  ggplot(aes(x = Quarter, y = Value, colour = Key)) +\n  geom_line() +\n  facet_grid(vars(Key), scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Without faceting:\nmytimeseries |>\n  pivot_longer(-Quarter, names_to = \"Key\", values_to = \"Value\") |>\n  ggplot(aes(x = Quarter, y = Value, colour = Key)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n:::\n\n# fpp3 2.10, Ex 4\n\n> The `USgas` package contains data on the demand for natural gas in the US.\n\n>    a. Install the `USgas` package.\n>    b. Create a tsibble from `us_total` with year as the index and state as the key.\n>    c. Plot the annual natural gas consumption by state for the New England area (comprising the states of Maine, Vermont, New Hampshire, Massachusetts, Connecticut and Rhode Island).\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"USgas\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(USgas)\nus_tsibble <- us_total |>\n  as_tsibble(index = year, key = state)\n# For each state\nus_tsibble |>\n  filter(\n    state %in%\n      c(\n        \"Maine\",\n        \"Vermont\",\n        \"New Hampshire\",\n        \"Massachusetts\",\n        \"Connecticut\",\n        \"Rhode Island\"\n      )\n  ) |>\n  autoplot(y / 1e3) +\n  labs(y = \"billion cubic feet\")\n```\n\n::: {.cell-output-display}\n![](ex2-sol_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n# fpp3 2.10, Ex 5\n\n> a. Download `tourism.xlsx` from [the book website](http://OTexts.com/fpp3/extrafiles/tourism.xlsx) and read it into R using `read_excel()` from the `readxl` package.\n> b. Create a tsibble which is identical to the `tourism` tsibble from the `tsibble` package.\n> c. Find what combination of `Region` and `Purpose` had the maximum number of overnight trips on average.\n> d. Create a new tsibble which combines the Purposes and Regions, and just has total trips by State.\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload.file(\n  \"http://OTexts.com/fpp3/extrafiles/tourism.xlsx\",\n  tourism_file <- tempfile(),\n  mode = \"wb\"\n)\nmy_tourism <- readxl::read_excel(tourism_file) |>\n  mutate(Quarter = yearquarter(Quarter)) |>\n  as_tsibble(\n    index = Quarter,\n    key = c(Region, State, Purpose)\n  )\nmy_tourism\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 24,320 x 5 [1Q]\n# Key:       Region, State, Purpose [304]\n   Quarter Region   State           Purpose  Trips\n     <qtr> <chr>    <chr>           <chr>    <dbl>\n 1 1998 Q1 Adelaide South Australia Business  135.\n 2 1998 Q2 Adelaide South Australia Business  110.\n 3 1998 Q3 Adelaide South Australia Business  166.\n 4 1998 Q4 Adelaide South Australia Business  127.\n 5 1999 Q1 Adelaide South Australia Business  137.\n 6 1999 Q2 Adelaide South Australia Business  200.\n 7 1999 Q3 Adelaide South Australia Business  169.\n 8 1999 Q4 Adelaide South Australia Business  134.\n 9 2000 Q1 Adelaide South Australia Business  154.\n10 2000 Q2 Adelaide South Australia Business  169.\n# ℹ 24,310 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ntourism\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 24,320 x 5 [1Q]\n# Key:       Region, State, Purpose [304]\n   Quarter Region   State           Purpose  Trips\n     <qtr> <chr>    <chr>           <chr>    <dbl>\n 1 1998 Q1 Adelaide South Australia Business  135.\n 2 1998 Q2 Adelaide South Australia Business  110.\n 3 1998 Q3 Adelaide South Australia Business  166.\n 4 1998 Q4 Adelaide South Australia Business  127.\n 5 1999 Q1 Adelaide South Australia Business  137.\n 6 1999 Q2 Adelaide South Australia Business  200.\n 7 1999 Q3 Adelaide South Australia Business  169.\n 8 1999 Q4 Adelaide South Australia Business  134.\n 9 2000 Q1 Adelaide South Australia Business  154.\n10 2000 Q2 Adelaide South Australia Business  169.\n# ℹ 24,310 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nmy_tourism |>\n  as_tibble() |>\n  summarise(Trips = mean(Trips), .by = c(Region, Purpose)) |>\n  filter(Trips == max(Trips))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  Region Purpose  Trips\n  <chr>  <chr>    <dbl>\n1 Sydney Visiting  747.\n```\n\n\n:::\n\n```{.r .cell-code}\nstate_tourism <- my_tourism |>\n  group_by(State) |>\n  summarise(Trips = sum(Trips)) |>\n  ungroup()\nstate_tourism\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 640 x 3 [1Q]\n# Key:       State [8]\n   State Quarter Trips\n   <chr>   <qtr> <dbl>\n 1 ACT   1998 Q1  551.\n 2 ACT   1998 Q2  416.\n 3 ACT   1998 Q3  436.\n 4 ACT   1998 Q4  450.\n 5 ACT   1999 Q1  379.\n 6 ACT   1999 Q2  558.\n 7 ACT   1999 Q3  449.\n 8 ACT   1999 Q4  595.\n 9 ACT   2000 Q1  600.\n10 ACT   2000 Q2  557.\n# ℹ 630 more rows\n```\n\n\n:::\n:::\n",
    "supporting": [
      "ex2-sol_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}