{
  "hash": "8684b41d175639a097b552ef3ad90219",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Additional Exercise Solutions\"\n---\n\n\n\n# fpp3 1.8, Ex 1\n\n>For cases 3 and 4 in Section 1.5, list the possible predictor variables that might be useful, assuming that the relevant data are available.\n\nCase 3: the following predictor variables might be useful, assuming that the relevant data are available:\n\n* Model and make of the vehicle\n* Odometer reading\n* Conditions of the vehicle\n* Company the vehicle was leased to\n* Color of the vehicle\n* Date of sale\n\nCase 4: the following predictor variables might be useful, assuming that the relevant data are available:\n\n* Day of the week\n* Day of the year\n* Is the day before long weekend\n* Is the day in the end of long weekend\n* Is the day before or in the beginning of school holidays (one variable per every state)\n* Is the day in the end of school holidays (one variable per every state)\n* Is the day before or in the beginning of a major sport event\n* Is the day after of a major sport event\n* Competitors' prices (relative to the price of the airline in question)\n* Is there a pilot strike at some of the competitors' airlines\n* Is there a pilot strike at the airline in question\n\n# fpp3 1.8, Ex 2\n\n> For case 3 in Section 1.5, describe the five steps of forecasting in the context of this project.\n\n#### 1. Problem definition\n\n* The main stakeholders should be defined and everyone questioned about which way he or she can benefit from the new system. In case of the fleet company probably the group of specialists was not recognized as stakeholders which led to complications in gathering relevant information and later in finding an appropriate statistical approach and deployment of the new forecasting method.\n\n#### 2. Gathering information\n\n+ Data set of past sales should be obtained, including surrounding information such as the way data were gathered, possible outliers and incorrect records, special values in the data.\n\n+ Expertise knowledge should be obtained from people responsible for the sales such as seasonal price fluctuations, if there is dependency of the price on the situation in economy, also finding other possible factors which can influence the price.\n\n#### 3. Preliminary (exploratory) analysis\n\n+ Possible outliers and inconsistent information should be found (for example very small, zero or even negative prices).\n\n+ Graphs which show dependency of the sale price on different predictor variables should be considered.\n\n+ Dependency of the sale price on month of the year should be plot.\n\n#### 4. Choosing and fitting models\n\n+ A model to start from (for example a linear model) and predictor variables which most likely affect the forecasts should be chosen. Predicting performance of the model should be evaluated.\n\n+ The model should be changed (for example by transforming parameters, adding or removing predictor variables) and it's performance evaluated. This should be done iteratively a few times until a satisfactory model is found.\n\n#### 5. Using and evaluating a forecasting model\n\n+ The appropriate software should be deployed to the company and relevant people should be educated how to use this software.\n\n+ Forecasting accuracy should be checked against new sales. If necessary the model should be updated and then the deployed software.\n\n# fpp3 3.7, Ex 6\n\n> Show that a $3\\times 5$ MA is equivalent to a 7-term weighted moving average with weights of 0.067, 0.133, 0.200, 0.200, 0.200, 0.133, and 0.067.\n\n5-term moving average:\n$$z_j = \\frac{1}{5}(y_{j-2}+y_{j-1}+y_j+y_{j+1}+y_{j+2}).$$\n3-term moving average:\n$$u_t = \\frac{1}{3}(z_{t-1}+z_t+z_{t+1}).$$\nSubstituting expression for $z_j$ into the latter formula we get\n\\begin{align*}\n  u_t &= \\frac{1}{3}\\left(\\frac{1}{5}\\left(y_{t-3}+y_{t-2}+y_{t-1}+y_{t}+y_{t+1}\\right)+\\frac{1}{5}\\left(y_{t-2}+y_{t-1}+y_t+y_{t+1}+y_{t+2}\\right)+\\frac{1}{5}\\left(y_{t-1}+y_{t}+y_{t+1}+y_{t+2}+y_{t+3}\\right)\\right).\\\\\n  &= \\frac{1}{15}\\left(y_{t-3}+2y_{t-2}+3y_{t-1}+3y_{t}+3y_{t+1}+2y_{t+2}+y_{t+3}\\right),\n\\end{align*}\nwhich is a 7-term weighted moving average with weights of 0.067, 0.133, 0.200, 0.200, 0.200, 0.133, and 0.067\n\n# fpp3 3.7, Ex 7\n\n> Consider the last five years of the Gas data from `aus_production`.\n\n>    ```r\n>    gas <- tail(aus_production, 5*4) |> select(Gas)\n>    ```\n\n>    a. Plot the time series. Can you identify seasonal fluctuations and/or a trend-cycle?\n\n::: {.cell}\n\n```{.r .cell-code}\ngas <- tail(aus_production, 5 * 4) |> select(Gas)\ngas |>\n  autoplot(Gas) + labs(y = \"Petajoules\")\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\nThere is some strong seasonality and a trend.\n\n>    b. Use `classical_decomposition` with `type=multiplicative` to calculate the trend-cycle and seasonal indices.\n>    c. Do the results support the graphical interpretation from part a?\n\n::: {.cell}\n\n```{.r .cell-code}\ndecomp <- gas |>\n  model(decomp = classical_decomposition(Gas, type = \"multiplicative\")) |>\n  components()\ndecomp |> autoplot()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\nThe decomposition has captured the seasonality and a slight trend.\n\n>    d. Compute and plot the seasonally adjusted data.\n\n::: {.cell}\n\n```{.r .cell-code}\nas_tsibble(decomp) |>\n  autoplot(season_adjust) +\n  labs(title = \"Seasonally adjusted data\", y = \"Petajoules\")\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n>    e. Change one observation to be an outlier (e.g., add 300 to one observation), and recompute the seasonally adjusted data. What is the effect of the outlier?\n>    f. Does it make any difference if the outlier is near the end rather than in the middle of the time series?\n\n::: {.cell}\n\n```{.r .cell-code}\ngas |>\n  mutate(Gas = if_else(Quarter == yearquarter(\"2007Q4\"), Gas + 300, Gas)) |>\n  model(decomp = classical_decomposition(Gas, type = \"multiplicative\")) |>\n  components() |>\n  as_tsibble() |>\n  autoplot(season_adjust) +\n  labs(title = \"Seasonally adjusted data\", y = \"Petajoules\")\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n-   The \"seasonally adjusted\" data now shows some seasonality because\n    the outlier has affected the estimate of the seasonal component.\n\n::: {.cell}\n\n```{.r .cell-code}\ngas |>\n  mutate(Gas = if_else(Quarter == yearquarter(\"2010Q2\"), Gas + 300, Gas)) |>\n  model(decomp = classical_decomposition(Gas, type = \"multiplicative\")) |>\n  components() |>\n  as_tsibble() |>\n  autoplot(season_adjust) +\n  labs(title = \"Seasonally adjusted data\", y = \"Petajoules\")\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nThe seasonally adjusted data now show no seasonality because the outlier is in the part of the data where the trend can't be estimated.\n\n# fpp3 3.7, Ex 8\n\n> Recall your retail time series data (from Exercise 8 in Section 2.10). Decompose the series using X11. Does it reveal any outliers, or unusual features that you had not noticed previously?\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345678)\nmyseries <- aus_retail |>\n  filter(`Series ID` == sample(aus_retail$`Series ID`, 1))\ndecomp <- myseries |>\n  model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) |>\n  components()\ndecomp |> autoplot()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nTwo outliers are now evident in the \"irregular\" component --- in December 1995 and July 2010.\n\n# fpp3 5.10, Ex 7\n\n> For your retail time series (from Exercise 8 in Section 2.10):\n>\n>   a. Create a training dataset consisting of observations before 2011.\n>   b. Check that your data have been split appropriately by producing the following plot.\n>   c. Calculate seasonal naÃ¯ve forecasts using `SNAIVE()` applied to your training data (`myseries_train`).\n>   d. Check the residuals. Do the residuals appear to be uncorrelated and normally distributed?\n>   e. Produce forecasts for the test data.\n>   f. Compare the accuracy of your forecasts against the actual values.\n>   g. How sensitive are the accuracy measures to the amount of training data used?\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345678)\nmyseries <- aus_retail |>\n  filter(`Series ID` == sample(aus_retail$`Series ID`, 1))\nmyseries_train <- myseries |>\n  filter(year(Month) < 2011)\nautoplot(myseries, Turnover) +\n  autolayer(myseries_train, Turnover, colour = \"red\")\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nThe plot indicates that the training data has been extracted correctly.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- myseries_train |>\n  model(SNAIVE(Turnover))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |> gg_tsresiduals()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\nThe residuals appear very auto-correlated as many lags exceed the significance threshold. This can also be seen in the residual plot, where there are periods of sustained high and low residuals. The distribution does not appear normally distributed, and is not centred around zero.\n\n::: {.cell}\n\n```{.r .cell-code}\nfc <- fit |>\n  forecast(new_data = anti_join(myseries, myseries_train))\nfc |> autoplot(myseries)\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbind_rows(\n  accuracy(fit),\n  accuracy(fc, myseries)\n) |>\n  select(-State, -Industry, -.model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã 9\n  .type       ME  RMSE   MAE   MPE  MAPE  MASE RMSSE  ACF1\n  <chr>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 Training 0.439  1.21 0.915  5.23 12.4   1     1    0.768\n2 Test     0.836  1.55 1.24   5.94  9.06  1.36  1.28 0.601\n```\n\n\n:::\n:::\n\nThe accuracy on the training data is substantially better than the out-of-sample forecast accuracy. This is common, and especially evident in this example as the model has failed to capture the trend in the data. This can be seen in the mean error, which is above zero as the model predictions do not account for the upward trend.\n\n::: {.cell}\n\n```{.r .cell-code}\nmyseries_accuracy <- function(data, last_training_year) {\n  myseries_train <- data |>\n    filter(year(Month) <= last_training_year)\n  fit <- myseries_train |>\n    model(SNAIVE(Turnover))\n  fc <- fit |>\n    forecast(new_data = anti_join(myseries, myseries_train))\n  bind_rows(\n    accuracy(fit),\n    accuracy(fc, myseries)\n  ) |>\n    mutate(last_training_year = last_training_year) |>\n    select(last_training_year, .type, ME:ACF1)\n}\nas.list(2011:2017) |>\n  purrr::map_dfr(myseries_accuracy, data = myseries) |>\n  ggplot(aes(x = last_training_year, y = RMSE, group = .type)) +\n  geom_line(aes(col = .type))\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\nThe accuracy on the training data is almost unchanged when the size of the training set is increased. However, the accuracy on the test data decreases as we are averaging RMSE over the forecast horizon, and with less training data the forecasts horizons can be longer.\n\n# fpp3 5.10, Ex 9\n\n>    a. Create a training set for household wealth (`hh_budget`) by withholding the last four years as a test set.\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain <- hh_budget |>\n  filter(Year <= max(Year) - 4)\n```\n:::\n\n>    b. Fit all the appropriate benchmark methods to the training set and forecast the periods covered by the test set.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- train |>\n  model(\n    naive = NAIVE(Wealth),\n    drift = RW(Wealth ~ drift()),\n    mean = MEAN(Wealth)\n  )\nfc <- fit |> forecast(h = 4)\n```\n:::\n\n>    c. Compute the accuracy of your forecasts. Which method does best?\n\n::: {.cell}\n\n```{.r .cell-code}\nfc |>\n  accuracy(hh_budget) |>\n  arrange(Country, MASE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 Ã 11\n   .model Country   .type    ME  RMSE   MAE   MPE  MAPE  MASE RMSSE    ACF1\n   <chr>  <chr>     <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>   <dbl>\n 1 drift  Australia Test   29.1  35.5  29.1  7.23  7.23 1.73  1.48   0.210 \n 2 naive  Australia Test   34.7  41.5  34.7  8.64  8.64 2.06  1.73   0.216 \n 3 mean   Australia Test   35.7  42.3  35.7  8.89  8.89 2.12  1.76   0.216 \n 4 drift  Canada    Test   33.3  37.2  33.3  6.09  6.09 1.73  1.57  -0.229 \n 5 naive  Canada    Test   46.2  51.0  46.2  8.46  8.46 2.40  2.15  -0.0799\n 6 mean   Canada    Test   90.4  92.9  90.4 16.7  16.7  4.69  3.92  -0.0799\n 7 drift  Japan     Test   14.7  17.9  14.7  2.44  2.44 0.943 0.967 -0.229 \n 8 naive  Japan     Test   36.3  37.8  36.3  6.06  6.06 2.34  2.04  -0.534 \n 9 mean   Japan     Test  100.  101.  100.  16.8  16.8  6.45  5.46  -0.534 \n10 drift  USA       Test   75.9  76.2  75.9 12.7  12.7  2.88  2.43  -0.561 \n11 naive  USA       Test   82.1  82.5  82.1 13.8  13.8  3.12  2.63  -0.423 \n12 mean   USA       Test   82.9  83.3  82.9 13.9  13.9  3.15  2.65  -0.423 \n```\n\n\n:::\n\n```{.r .cell-code}\nfc |>\n  accuracy(hh_budget) |>\n  group_by(.model) |>\n  summarise(MASE = mean(MASE)) |>\n  ungroup() |>\n  arrange(MASE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 Ã 2\n  .model  MASE\n  <chr>  <dbl>\n1 drift   1.82\n2 naive   2.48\n3 mean    4.10\n```\n\n\n:::\n:::\n\nThe drift method is better for every country, and on average.\n\n>    d. Do the residuals from the best method resemble white noise?\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  filter(Country == \"Australia\") |>\n  select(drift) |>\n  gg_tsresiduals()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex94-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfit |>\n  filter(Country == \"Canada\") |>\n  select(drift) |>\n  gg_tsresiduals()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex94-2.png){width=672}\n:::\n\n```{.r .cell-code}\nfit |>\n  filter(Country == \"Japan\") |>\n  select(drift) |>\n  gg_tsresiduals()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex94-3.png){width=672}\n:::\n\n```{.r .cell-code}\nfit |>\n  filter(Country == \"USA\") |>\n  select(drift) |>\n  gg_tsresiduals()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex94-4.png){width=672}\n:::\n:::\n\nIn all cases, the residuals look like white noise.\n\n# fpp3 5.10, Ex 10\n\n>    a. Create a training set for Australian takeaway food turnover (`aus_retail`) by withholding the last four years as a test set.\n\n::: {.cell}\n\n```{.r .cell-code}\ntakeaway <- aus_retail |>\n  filter(Industry == \"Takeaway food services\") |>\n  summarise(Turnover = sum(Turnover))\ntrain <- takeaway |>\n  filter(Month <= max(Month) - 4 * 12)\n```\n:::\n\n>    b. Fit all the appropriate benchmark methods to the training set and forecast the periods covered by the test set.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- train |>\n  model(\n    naive = NAIVE(Turnover),\n    drift = RW(Turnover ~ drift()),\n    mean = MEAN(Turnover),\n    snaive = SNAIVE(Turnover)\n  )\nfc <- fit |> forecast(h = \"4 years\")\n```\n:::\n\n>    c. Compute the accuracy of your forecasts. Which method does best?\n\n::: {.cell}\n\n```{.r .cell-code}\nfc |>\n  accuracy(takeaway) |>\n  arrange(MASE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã 10\n  .model .type    ME  RMSE   MAE   MPE  MAPE  MASE RMSSE  ACF1\n  <chr>  <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 naive  Test  -12.4  119.  96.4 -1.49  6.66  2.30  2.25 0.613\n2 drift  Test  -93.7  130. 108.  -6.82  7.67  2.58  2.46 0.403\n3 snaive Test  177.   192. 177.  11.7  11.7   4.22  3.64 0.902\n4 mean   Test  829.   838. 829.  55.7  55.7  19.8  15.8  0.613\n```\n\n\n:::\n:::\n\nThe naive method is best here.\n\n>    d. Do the residuals from the best method resemble white noise?\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  select(naive) |>\n  gg_tsresiduals()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex104-1.png){width=672}\n:::\n:::\n\nThis is far from white noise. There is strong seasonality and increasing variance that has not been accounted for by the naive model.\n\n# fpp3 8.8, Ex6\n\n> Forecast the Chinese GDP from the `global_economy` data set using an ETS model. Experiment with the various options in the `ETS()` function to see how much the forecasts change with damped trend, or with a Box-Cox transformation. Try to develop an intuition of what each is doing to the forecasts.\n\n> [Hint: use `h=20` when forecasting, so you can clearly see the differences between the various options when plotting the forecasts.]\n\n::: {.cell}\n\n```{.r .cell-code}\nchina <- global_economy |>\n  filter(Country == \"China\")\nchina |> autoplot(GDP)\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n-   It clearly needs a relatively strong transformation due to the increasing\n    variance.\n\n::: {.cell}\n\n```{.r .cell-code}\nchina |> autoplot(box_cox(GDP, 0.2))\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nchina |> features(GDP, guerrero)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã 2\n  Country lambda_guerrero\n  <fct>             <dbl>\n1 China           -0.0345\n```\n\n\n:::\n:::\n\n-   Making $\\lambda=0.2$ looks ok.\n\n-   The Guerrero method suggests an even stronger transformation. Let's also try\n    a log.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- china |>\n  model(\n    ets = ETS(GDP),\n    ets_damped = ETS(GDP ~ trend(\"Ad\")),\n    ets_bc = ETS(box_cox(GDP, 0.2)),\n    ets_log = ETS(log(GDP))\n  )\n\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A mable: 1 x 5\n# Key:     Country [1]\n  Country          ets    ets_damped       ets_bc      ets_log\n  <fct>        <model>       <model>      <model>      <model>\n1 China   <ETS(M,A,N)> <ETS(M,Ad,N)> <ETS(A,A,N)> <ETS(A,A,N)>\n```\n\n\n:::\n\n```{.r .cell-code}\naugment(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 232 x 7 [1Y]\n# Key:       Country, .model [4]\n   Country .model  Year          GDP      .fitted        .resid   .innov\n   <fct>   <chr>  <dbl>        <dbl>        <dbl>         <dbl>    <dbl>\n 1 China   ets     1960 59716467625. 49001691297.  10714776328.  0.219  \n 2 China   ets     1961 50056868958. 66346643194. -16289774236. -0.246  \n 3 China   ets     1962 47209359006. 51607368186.  -4398009180. -0.0852 \n 4 China   ets     1963 50706799903. 47386494407.   3320305495.  0.0701 \n 5 China   ets     1964 59708343489. 51919091574.   7789251914.  0.150  \n 6 China   ets     1965 70436266147. 63350421234.   7085844913.  0.112  \n 7 China   ets     1966 76720285970. 76289186599.    431099371.  0.00565\n 8 China   ets     1967 72881631327. 82708375812.  -9826744486. -0.119  \n 9 China   ets     1968 70846535056. 75804820984.  -4958285928. -0.0654 \n10 China   ets     1969 79705906247. 72222259470.   7483646777.  0.104  \n# â¹ 222 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nfit |>\n  forecast(h = \"20 years\") |>\n  autoplot(china, level = NULL)\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n-   The transformations have a big effect, with small lambda values creating big\n    increases in the forecasts.\n-   The damping has relatively a small effect.\n\n# fpp3 8.8, Ex7\n\n> Find an ETS model for the Gas data from `aus_production` and forecast the next few years. Why is multiplicative seasonality necessary here? Experiment with making the trend damped. Does it improve the forecasts?\n\n::: {.cell}\n\n```{.r .cell-code}\naus_production |> autoplot(Gas)\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n-   There is a huge increase in variance as the series increases in level. =\\>\n    That makes it necessary to use multiplicative seasonality.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- aus_production |>\n  model(\n    hw = ETS(Gas ~ error(\"M\") + trend(\"A\") + season(\"M\")),\n    hwdamped = ETS(Gas ~ error(\"M\") + trend(\"Ad\") + season(\"M\")),\n  )\n\nfit |> glance()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã 9\n  .model    sigma2 log_lik   AIC  AICc   BIC   MSE  AMSE    MAE\n  <chr>      <dbl>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>\n1 hw       0.00324   -831. 1681. 1682. 1711.  21.1  32.2 0.0413\n2 hwdamped 0.00329   -832. 1684. 1685. 1718.  21.1  32.0 0.0417\n```\n\n\n:::\n:::\n\n- The non-damped model seems to be doing slightly better here, probably because the trend is very strong over most of the historical data.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  select(hw) |>\n  gg_tsresiduals()\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfit |> tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 Ã 3\n   .model   term  estimate\n   <chr>    <chr>    <dbl>\n 1 hw       alpha   0.653 \n 2 hw       beta    0.144 \n 3 hw       gamma   0.0978\n 4 hw       l[0]    5.95  \n 5 hw       b[0]    0.0706\n 6 hw       s[0]    0.931 \n 7 hw       s[-1]   1.18  \n 8 hw       s[-2]   1.07  \n 9 hw       s[-3]   0.816 \n10 hwdamped alpha   0.649 \n11 hwdamped beta    0.155 \n12 hwdamped gamma   0.0937\n13 hwdamped phi     0.980 \n14 hwdamped l[0]    5.86  \n15 hwdamped b[0]    0.0994\n16 hwdamped s[0]    0.928 \n17 hwdamped s[-1]   1.18  \n18 hwdamped s[-2]   1.08  \n19 hwdamped s[-3]   0.817 \n```\n\n\n:::\n\n```{.r .cell-code}\nfit |>\n  augment() |>\n  filter(.model == \"hw\") |>\n  features(.innov, ljung_box, lag = 24)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã 3\n  .model lb_stat lb_pvalue\n  <chr>    <dbl>     <dbl>\n1 hw        57.1  0.000161\n```\n\n\n:::\n:::\n\n- There is still some small *correlations* left in the residuals, showing the model has not fully captured the available information.\n- There also appears to be some *heteroskedasticity* in the residuals with larger variance in the first half the series.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  forecast(h = 36) |>\n  filter(.model == \"hw\") |>\n  autoplot(aus_production)\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\nWhile the point forecasts look ok, the intervals are excessively wide.\n\n# fpp3 10.7, Ex 1\n\n> This exercise uses data set `LakeHuron` giving the level of Lake Huron from 1875â1972.\n\n>   a. Convert the data to a tsibble object using the `as_tsibble()` function.\n>   b. Fit a piecewise linear trend model to the Lake Huron data with a knot at 1920 and an ARMA error structure.\n>   c. Forecast the level for the next 30 years. Do you think the extrapolated linear trend is realistic?\n\n::: {.cell}\n\n```{.r .cell-code}\nhuron <- as_tsibble(LakeHuron)\nfit <- huron |>\n  model(ARIMA(value ~ trend(knot = 1920)))\nreport(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: value \nModel: LM w/ ARIMA(2,0,0) errors \n\nCoefficients:\n         ar1      ar2  trend(knot = 1920)trend  trend(knot = 1920)trend_46\n      0.9628  -0.3107                  -0.0572                      0.0633\ns.e.  0.0973   0.0983                   0.0161                      0.0265\n      intercept\n       580.9391\ns.e.     0.5124\n\nsigma^2 estimated as 0.4594:  log likelihood=-98.86\nAIC=209.73   AICc=210.65   BIC=225.24\n```\n\n\n:::\n\n```{.r .cell-code}\nfit |>\n  forecast(h = 30) |>\n  autoplot(huron) + labs(y = \"feet\")\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex1-1.png){width=672}\n:::\n:::\n\nIt seems unlikely that there was an increasing trend from 1973 to 2002, but the prediction intervals are very wide so they probably capture the actual values. Historical data on the level of Lake Huron can be obtained from the [NOAA](https://tidesandcurrents.noaa.gov/waterlevels.html?id=9075014&bdate=19730101&edate=20020101&datum=IGLD&interval=m&action=data).\n\n# fpp3 10.7, Ex 7\n\n> For the retail time series considered in earlier chapters:\n>\n>   a. Develop an appropriate dynamic regression model with Fourier terms for the seasonality. Use the AIC to select the number of Fourier terms to include in the model. (You will probably need to use the same Box-Cox transformation you identified previously.)\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345678)\nmyseries <- aus_retail |>\n  filter(\n    `Series ID` == sample(aus_retail$`Series ID`, 1),\n    Month < yearmonth(\"2018 Jan\")\n  )\n\nmyseries |> features(Turnover, guerrero)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã 3\n  State              Industry                                    lambda_guerrero\n  <chr>              <chr>                                                 <dbl>\n1 Northern Territory Clothing, footwear and personal accessory â¦          0.0776\n```\n\n\n:::\n\n```{.r .cell-code}\nmyseries |> autoplot(log(Turnover))\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex7a-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfit <- myseries |>\n  model(\n    `K=1` = ARIMA(log(Turnover) ~ trend() + fourier(K = 1) +\n      pdq(0:2, 0, 0:2) + PDQ(0:1, 0, 0:1)),\n    `K=2` = ARIMA(log(Turnover) ~ trend() + fourier(K = 2) +\n      pdq(0:2, 0, 0:2) + PDQ(0:1, 0, 0:1)),\n    `K=3` = ARIMA(log(Turnover) ~ trend() + fourier(K = 3) +\n      pdq(0:2, 0, 0:2) + PDQ(0:1, 0, 0:1)),\n    `K=4` = ARIMA(log(Turnover) ~ trend() + fourier(K = 4) +\n      pdq(0:2, 0, 0:2) + PDQ(0:1, 0, 0:1)),\n    `K=5` = ARIMA(log(Turnover) ~ trend() + fourier(K = 5) +\n      pdq(0:2, 0, 0:2) + PDQ(0:1, 0, 0:1)),\n    `K=6` = ARIMA(log(Turnover) ~ trend() + fourier(K = 6) +\n      pdq(0:2, 0, 0:2) + PDQ(0:1, 0, 0:1))\n  )\nglance(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 Ã 10\n  State      Industry .model  sigma2 log_lik   AIC  AICc   BIC ar_roots ma_roots\n  <chr>      <chr>    <chr>    <dbl>   <dbl> <dbl> <dbl> <dbl> <list>   <list>  \n1 Northern â¦ Clothinâ¦ K=1    0.00664    383. -748. -748. -713. <cpl>    <cpl>   \n2 Northern â¦ Clothinâ¦ K=2    0.00652    389. -756. -755. -713. <cpl>    <cpl>   \n3 Northern â¦ Clothinâ¦ K=3    0.00626    400. -774. -773. -723. <cpl>    <cpl>   \n4 Northern â¦ Clothinâ¦ K=4    0.00596    411. -792. -791. -734. <cpl>    <cpl>   \n5 Northern â¦ Clothinâ¦ K=5    0.00480    453. -873. -872. -811. <cpl>    <cpl>   \n6 Northern â¦ Clothinâ¦ K=6    0.00437    470. -906. -905. -841. <cpl>    <cpl>   \n```\n\n\n:::\n:::\n\nIncluding 6 harmonics minimises the AICc (and AIC/BIC) for this series.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- transmute(fit, best = `K=6`)\n\nreport(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: Turnover \nModel: LM w/ ARIMA(1,0,1)(1,0,0)[12] errors \nTransformation: log(Turnover) \n\nCoefficients:\n         ar1      ma1    sar1  trend()  fourier(K = 6)C1_12\n      0.9632  -0.3755  0.1761   0.0041              -0.0809\ns.e.  0.0165   0.0502  0.0542   0.0006               0.0080\n      fourier(K = 6)S1_12  fourier(K = 6)C2_12  fourier(K = 6)S2_12\n                  -0.1258               0.0381              -0.0882\ns.e.               0.0080               0.0052               0.0052\n      fourier(K = 6)C3_12  fourier(K = 6)S3_12  fourier(K = 6)C4_12\n                  -0.0206              -0.0815              -0.0294\ns.e.               0.0045               0.0045               0.0042\n      fourier(K = 6)S4_12  fourier(K = 6)C5_12  fourier(K = 6)S5_12\n                  -0.0538              -0.0554              -0.0540\ns.e.               0.0042               0.0041               0.0041\n      fourier(K = 6)C6_12  intercept\n                  -0.0230     1.3317\ns.e.               0.0029     0.1231\n\nsigma^2 estimated as 0.004368:  log likelihood=470.23\nAIC=-906.46   AICc=-904.65   BIC=-840.54\n```\n\n\n:::\n:::\n\nThe chosen model is a linear trend (will be exponential after back-transforming) and fourier terms with 5 harmonics. The error model is ARIMA(1,0,1)(1,0,1).\n\n>   b. Check the residuals of the fitted model. Does the residual series look like white noise?\n\n::: {.cell}\n\n```{.r .cell-code}\ngg_tsresiduals(fit)\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex7b-1.png){width=672}\n:::\n:::\n\nThe residuals look well behaved.\n\n>   c. Compare the forecasts with those you obtained earlier using alternative models.\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- myseries |>\n  model(\n    dynamic = ARIMA(log(Turnover) ~ trend() + fourier(K = 6) +\n      pdq(0:2, 0, 0:2) + PDQ(0:1, 0, 0:1)),\n    arima = ARIMA(log(Turnover)),\n    ets = ETS(Turnover)\n  )\nfit |>\n  forecast() |>\n  autoplot(filter(myseries, year(Month) > 2010), level = 80, alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](other-ex-sol_files/figure-html/ex7c-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "other-ex-sol_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}